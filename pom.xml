<?xml version="1.0"?>
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>com.oxygenxml</groupId>
    <artifactId>oxygen-plugins-superpom</artifactId>
    <version>25.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>web-author-learn-words-plugin</artifactId>

  <developers>
    <developer>
      <name>Andrei Popa</name>
      <email>andrei_popa@sync.ro</email>
      <roles>
        <role>manager</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <oxygen.sdk.version>25.0-SNAPSHOT</oxygen.sdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <!-- Download artifacts from the oXygem XML Maven Repository-->
    <repository>
      <id>oxygenxml</id>
      <name>oXygen XML SDK Maven Repository</name>
      <url>http://oxygenxml.com/maven/</url>
    </repository>
  </repositories>

  <dependencies>
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.13.1</version>
		    <scope>test</scope>
		</dependency>
		  
    <dependency>
      <groupId>com.oxygenxml</groupId>
      <artifactId>oxygen-webapp</artifactId>
      <version>${oxygen.sdk.version}</version>
      <classifier>classes</classifier>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.oxygenxml</groupId>
      <artifactId>oxygen-patched-xerces</artifactId>
      <version>${oxygen.sdk.version}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
          <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- HTML templates -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>3.0.6.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.22</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
    <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <configuration>
          <nodeVersion>v12.16.0</nodeVersion>
          <npmVersion>v6.13.4</npmVersion>
          <nodeDownloadRoot>${node.download.root}</nodeDownloadRoot>
          <npmDownloadRoot>${npm.download.root}</npmDownloadRoot>
          <installDirectory>target</installDirectory>
          <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm registry config</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>config set @oxygenxml:registry ${npm.registry.url}</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>wa-build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- remove the -SNAPSHOT from packaged plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <!-- We only want the final JAR package in the target folder so that it's easier for users to identify it.-->
          <outputDirectory>${project.build.directory}/build</outputDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archiveBaseDirectory>${project.basedir}</archiveBaseDirectory>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>
</project>
